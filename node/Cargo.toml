[package]
name = "parachain-magnet-node"
version = "0.6.0"
authors = ["Magnet"]
description = "A scalable evm smart contract platform node, utilizing DOT as the gas fee."
license = "Apache License 2.0"
homepage = "https://magnet.magport.io/"
repository.workspace = true
edition.workspace = true
build = "build.rs"
publish = false

[dependencies]
clap = { workspace = true, features = ["derive"] }
log = { workspace = true }
codec = { package = "parity-scale-codec", workspace = true }
serde = { workspace = true, features = ["derive"] }
jsonrpsee = { workspace = true, features = ["server"] }
futures = { workspace = true }
serde_json = { workspace = true }
schnellru = { workspace = true }
url = { workspace = true }
tracing = { workspace = true }
array-bytes = { workspace = true }
hex-literal = { workspace = true }
scale-info = { workspace = true, features = ["derive", "serde"] }
subxt = { workspace = true, features = ["substrate-compat"]}
subxt-signer = { workspace = true }

# Local
parachain-magnet-runtime = { path = "../runtime" }
magnet-primitives-order = { path = "../primitives/order"}
magnet-client-consensus-aura = {path ="../client/consensus/aura"}
pallet-pot-rpc = { path = "../pallets/pot/rpc" }
mp-system = { path = "../primitives/system"}

# Substrate
frame-benchmarking = { workspace = true }
frame-benchmarking-cli = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-offchain = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-aura = { workspace = true }
sc-consensus-manual-seal = { workspace = true }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sc-service = { workspace = true }
sc-sysinfo = { workspace = true }
sc-telemetry = { workspace = true }
sc-tracing = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-inherents = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-offchain = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-keystore = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-timestamp = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-session = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
substrate-prometheus-endpoint = { workspace = true }
pallet-balances = { workspace = true }
frame-system = { workspace = true }
pallet-transaction-payment = { workspace = true }
sp-application-crypto= { workspace = true }
sp-std = { workspace = true }

# Polkadot
polkadot-cli = { workspace = true, features = ["rococo-native"] }
polkadot-primitives = { workspace = true }
xcm = { workspace = true, default-features = false}
polkadot-runtime-common =  { workspace = true }
runtime-parachains = { workspace = true }

# Cumulus
cumulus-client-cli = { workspace = true }
cumulus-client-collator = { workspace = true }
cumulus-client-consensus-aura = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-consensus-proposer = { workspace = true }
cumulus-client-service = { workspace = true}
cumulus-primitives-core = { workspace = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }
frame-system-rpc-runtime-api={ workspace = true, default-features = false}
pallet-transaction-payment-rpc-runtime-api = { workspace = true, default-features = false }
color-print = "0.3.4"

# Frontier Primitive
fp-evm = { workspace = true }
fp-rpc = { workspace = true }
fp-dynamic-fee = { workspace = true }

fc-api = { workspace = true }
fc-cli = { workspace = true }
fc-db = { workspace = true }
fc-mapping-sync = { workspace = true }
fc-rpc = { workspace = true }
fc-rpc-core = { workspace = true }
fc-storage = { workspace = true }
fc-consensus = {  workspace = true }

#move pallet rpc
pallet-move-rpc = { workspace = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[features]
default = [
	"with-rocksdb-weights",
	"rocksdb",
	"sql",
	"txpool",
]

rocksdb = [
	"sc-cli/rocksdb",
	"sc-service/rocksdb",
	"fc-cli/rocksdb",
	"fc-db/rocksdb",
	"fc-mapping-sync/rocksdb",
	"fc-rpc/rocksdb",
]

sql = [
	"fc-db/sql",
	"fc-mapping-sync/sql",
]
with-rocksdb-weights = ["parachain-magnet-runtime/with-rocksdb-weights"]
with-paritydb-weights = ["parachain-magnet-runtime/with-paritydb-weights"]
txpool = ["fc-rpc/txpool"]

runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"parachain-magnet-runtime/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"parachain-magnet-runtime/try-runtime",
	"polkadot-cli/try-runtime",
	"sp-runtime/try-runtime",
]

